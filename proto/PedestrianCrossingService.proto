syntax = "proto3";

option java_multiple_files = true;
option java_package = "SchoolZoneTraffic";
option java_outer_classname = "PedestrianCrossingServiceOuterClass";

service PedestrianCrossingService {

  // Unary RPC - user presses "Request to Cross" button
  rpc GetCrossingStatus (EmptyRequest) returns (CrossingResponse);

  // Client Streaming - user sends number of pedestrians waiting
  rpc SendPedestrianData (stream PedestrianData) returns (PedestrianAck);

  // Server Streaming - system starts countdown
  rpc StreamCrossingUpdates (CountdownRequest) returns (stream CrossingResponse);

  // Bi-Directional Streaming - live pedestrian action monitoring and alerts
  rpc StreamPedestrianStatus  (stream PedestrianAction) returns (stream CrossingResponse);
}

message EmptyRequest {
}

message CountdownRequest {
}

message PedestrianData {
  int32 pedestrian_count = 1;
}

message PedestrianAck {
  bool success = 1;
  string message = 2;
}

message PedestrianAction {
  string action = 1; // Examples: "waiting", "started crossing", "crossed during red"
}

message CrossingResponse {
  string status = 1;             // Examples: "Wait", "You may cross", "Warning"
  int32 seconds_remaining = 2;   // Used only for countdown, set 0 otherwise
}
